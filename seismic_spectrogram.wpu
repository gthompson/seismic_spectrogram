#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('generate_spectrograms.py'): {50L: (0,
        None,
        1,
        0)}}
debug.err-values = {None: {}}
debug.show-args-dialog = {loc('generate_spectrograms.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'fses9f4Ql5Wma7zl9Z57yzFsVP'\
        'P14rNP',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.18287037037037035,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(2,)],
                                 'selected-nodes': [(2,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.2441767068273092,
        'override_title': None,
        'pagelist': [('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'wild',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'documentation'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'running ltsva',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 1111L,
                       'folded-linenos': [],
                       'history': {None: ['stream\n',
        'stream * 5\n',
        'print(stream *5)\n',
        'for trace in stream:\n   trace.data *= 5\n\n',
        'resp.text\n',
        'meta[channel]\n',
        'meta\n',
        'zip(keys, line)\n',
        'line\n',
        'keys\n',
        'dict(zip(keys, line))\n',
        "wclient.get_availability(network = '*', station = STA)\n",
        'print(stream)\n',
        'len(stream)\n',
        'stream.count\n',
        'stream.count()\n',
        'tr_test = stream[0]\n',
        'tr_test.count()\n'],
                                   u'file:/Applications/WingPro.app/Contents/Resources/updates/7.2.7.0/src/testing/runners/run_pytest_xml.py': ['f'\
        'type\n',
        "f.attrs.get('ident_attr')\n",
        'for key, value in f.attrs.items():\n  print(key, " : ", value)\n\n',
        "f.attrs.get('sensor')\n",
        'f.attrs.get(ident_attr)\n',
        'f.attrs.get(ident_attr) == ident_val\n',
        "f.attrs.get(ident_attr) == ident_val.encode('utf-8')\n"],
                                   u'file:/Users/israel/Development/seismic_spectrogram/generate_spectrograms.py': ['t'\
        'imes.shape\n',
        'spec_info[2].shape\n',
        'cm_values.shape\n',
        'cm_values.T.shape\n',
        'cm_values.T\n',
        'tr.id\n',
        'tr.normalize()\n',
        'tr.max()\n',
        'tr.data\n',
        'tr.normalize(10)\n',
        'tr.data.max()\n',
        'tr.data.min()\n',
        'data.min()\n',
        'data.max()\n',
        'data_norm\n',
        'data / data_norm\n',
        '(data / data_norm).min()\n',
        '(data / data_norm).max()\n',
        'data / data.max()\n',
        'data / data.min()\n',
        '(data / data.min()).max()\n',
        '(data / data.min()).min()\n',
        'numpy.linalg.norm(data)\n',
        'numpy.linalg.norm(data, 2)\n',
        'numpy.linalg.norm(data, 1)\n',
        'data / 9458809\n',
        'data * (20 / data.max())\n',
        'data * (20 / data.min())\n',
        '(data * (20 / data.min())).min()\n',
        '(data * (20 / data.min())).max()\n',
        'STARTTIME - 2\n',
        'STARTTIME - 2.0\n',
        'STARTTIME + 2\n',
        'STARTTIME + 2.1\n',
        'times + STARTTIME\n',
        'STARTTIME + times\n',
        'STARTTIME.timestamp()\n',
        'times + STARTTIME.timestamp\n',
        'from datetime import datetime\n',
        'numpy.datetime64(times + STARTTIME.timestamp)\n',
        '(times + STARTTIME.timestamp).astype(numpy.datetime64)\n',
        "(times + STARTTIME.timestamp).astype('datetime64[s]')\n",
        "test = (times + STARTTIME.timestamp).astype('datetime64[s]')\n",
        "test = (times + STARTTIME.timestamp).astype('datetime64[ms]')\n",
        "test = (times + STARTTIME.timestamp).astype('datetime64[ns]')\n",
        "test = ((times + STARTTIME.timestamp) * 1000).astype('datetime64[ns"\
        "]')\n",
        "test = ((times + STARTTIME.timestamp) * 10000).astype('datetime64[n"\
        "s]')\n",
        "test = ((times + STARTTIME.timestamp) * 10000).astype('datetime64[m"\
        "s]')\n",
        "test = ((times + STARTTIME.timestamp) * 100).astype('datetime64[ms]"\
        "')\n",
        "test = ((times + STARTTIME.timestamp) * 1000).astype('datetime64[ms"\
        "]')\n",
        'test\n',
        'for val in test[:5]:\n    print(val)\n\n',
        'spec_info[0]\n',
        'spec_info[0].shape\n',
        'spec_info[1].shape\n',
        'spec_info[1]\n',
        'STARTTIME.timestamp\n',
        'get_epoch()\n',
        "np.timedelta64(int(np.round(x * MUSECONDS_PER_DAY)), 'us')\n",
        'x\n',
        'plot_times\n',
        'times\n',
        "plot_times.astype('timestamp64')\n",
        "plot_times.astype(64')\n",
        "plot_times.astype('datetime64')\n",
        "plot_times.astype('datetime64[s]')\n",
        'tr.count()\n',
        'tr.meta\n',
        'for item in tr.meta.values():\n    print(item)\n\n',
        'for item in tr.meta.items():\n    print(item)\n\n',
        'from obspy.clients.fdsn import Client, header\n',
        'client = Client("IRIS")\n',
        'reader\n',
        'keys = reader[0]\n',
        'keys = next(reader)\n',
        'keys\n',
        'values = next(reader)\n',
        'dict(zip(keys, values))\n',
        "float(meta['Scale'])\n",
        'spec_info[2][50]\n',
        'spec_info[2]\n',
        'spec_info[2][50][50]\n',
        'numpy.log10(spec_info[2])[50][50]\n',
        'numpy.log10(spec_info[2])[50][50] *.02\n',
        'numpy.log10(spec_info[2])[50][50] *.002\n',
        'numpy.log10(spec_info[2])[50][50] *.00002\n',
        'numpy.log10(spec_info[2])[50][50] *.0000002\n',
        'meta\n',
        'data2\n',
        'data\n',
        'data2.mean()\n',
        'future.result()\n',
        "config['GLOBAL'].get('minutesperimage', 10)\n"],
                                   u'file:/Users/israel/Development/seismic_spectrogram/station_config.py': ['a'\
        'vail\n'],
                                   u'file:/Users/israel/Development/tropomi_gui/SO2 Explorer.py': ['q'\
        'App\n',
        'qApp.processEvents()\n',
        'prog\n',
        'self.displayed_plot\n',
        'self.displayed_plot.boundingRect\n',
        'self.displayed_plot.boundingRect()\n',
        'self.displayed_plot.bounds\n',
        'self.displayed_plot.childrenShape\n',
        'self.displayed_plot.childrenShape()\n',
        'self.displayed_plot.data()\n',
        'self.displayed_plot.data\n',
        'self.displayed_plot.data.shape\n',
        'self.displayed_plot.show()\n',
        "self.so2data['lon'].data.range\n",
        "self.so2data['lon'].data.bounds\n",
        "self.so2data['lon'].data.min()\n",
        "self.so2data['lon'].data.max()\n",
        "[[self.so2data['lon'].data.min(), self.so2data['lon'].data.max()], "\
        "[self.so2data['lat'].data.min(), self.so2data['lat'].data.max()]]\n",
        'not data_range.bottom() < view_range.top()\n',
        'and not data_range.top() > view_range.bottom()\n',
        'not data_range.top() > view_range.bottom()\n',
        'data_range.height() > 2 * hyst * limit * view_height\n']},
                       'launch-id': None,
                       'sel-line': 1121L,
                       'sel-line-start': 53182L,
                       'selection_end': 53182L,
                       'selection_start': 53182L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 721L,
                       'folded-linenos': [],
                       'history': {None: ['from obspy.clients.fdsn import Cl'\
        'ient, header\n',
        'client = Client("IRIS")\n',
        'ENDTIME = UTCDateTime(2021, 6, 3, 14, 50)\n',
        "STARTTIME = UTCDateTime(2021, 6, 3, 14, 40)\n\n    NET = 'AV'\n    "\
        "STA = 'WAZA'\n    CHAN = 'BHZ'\n\n",
        "STARTTIME = UTCDateTime(2021, 6, 3, 14, 40)\nNET = 'AV'\nSTA = 'WAZ"\
        "A'\nCHAN = 'BHZ'\n\n",
        "client.get_stations(network = NET, station = STA, channel = CHAN, l"\
        "ocation = '*', starttime = STARTTIME, endtime = ENDTIME)\n",
        "test = client.get_stations(network = NET, station = STA, channel = "\
        "CHAN, location = '*', starttime = STARTTIME, endtime = ENDTIME)\n",
        "test = client.get_stations(network = NET, station = STA, channel = "\
        "CHAN, location = '*', starttime = STARTTIME, endtime = ENDTIME, lev"\
        "el = 'channel')\n",
        "test = client.get_stations(network = NET, station = STA, channel = "\
        "CHAN, location = '*', starttime = STARTTIME, endtime = ENDTIME, lev"\
        "el = 'response', )\n",
        'test[0]\n',
        'print(test[0])\n',
        'print(test[0][0])\n',
        'print(test[0][0][0])\n',
        'print(test[0][0][0][0])\n',
        'print(test[0][0][0]).response()\n',
        'print(test[0][0][0]).response\n',
        "test = client.get_stations(network = NET, station = STA, channel = "\
        "CHAN, location = '*', starttime = STARTTIME, endtime = ENDTIME, lev"\
        "el = 'response', format = \"text\")\n",
        "test = client.get_stations(network = NET, station = STA, channel = "\
        "CHAN, location = '*', starttime = STARTTIME, endtime = ENDTIME, lev"\
        "el = 'response')\n",
        "test.get_channel_metadata('CHAN')\n",
        'test.get_channel_metadata(CHAN)\n',
        'test.get_response("AV.WAZA..BHZ", STARTTIME)\n',
        'test.get_contents()\n',
        'print(test.get_response("AV.WAZA..BHZ", STARTTIME))\n',
        'print(test.get_response("AV.WAZA..BHZ", ENDTIME))\n',
        'test.get_channel_metadata("AV.WAZA..BHZ")\n',
        'test.get_channel_orientation("AV.WAZA..BHZ")\n',
        'test.get_orientation("AV.WAZA..BHZ")\n',
        "test = client.get_waveforms(network = NET, station = STA, channel ="\
        " CHAN, location = '*', starttime = STARTTIME, endtime = ENDTIME, le"\
        "vel = 'response')\n",
        "test = client.get_waveforms(network = NET, station = STA, channel ="\
        " CHAN, location = '*', starttime = STARTTIME, endtime = ENDTIME)\n",
        'test.stats\n',
        'test_tr = test.pop()\n',
        'test_tr\n',
        'print(test_tr)\n',
        'test_tr.stats\n',
        'test_tr.meta\n',
        'for item in test_tr.meta.items():\n    print(item)\n\n',
        "test = client.get_stations(network = NET, station = STA, channel = "\
        "\"*\", location = '*', starttime = STARTTIME, endtime = ENDTIME, le"\
        "vel = 'response')\n",
        'print(test)\n',
        'test.get_channel_metadata("AV.WAZA..BHE")\n',
        'print(test.get_response("AV.WAZA..BHE", ENDTIME))\n',
        'test.get_response("AV.WAZA..BHE", ENDTIME)\n',
        'test.get_response("AV.WAZA..BHE", ENDTIME).get_valresp_response()\n',
        'test.get_response("AV.WAZA..BHE", ENDTIME).get_evalrep_response()\n',
        'test.get_response("AV.WAZA..BHE", ENDTIME).get_evalresp_response()'\
        '\n',
        'test.get_response("AV.WAZA..BHE", ENDTIME).get_sacpz()\n',
        'test.get_response("AV.WAZA..BHE", ENDTIME).get_paz()\n',
        'print(test.get_response("AV.WAZA..BHE", ENDTIME).get_paz())\n',
        "inv = client.get_stations(network=NET, station=STA, channel=CHAN,\n"\
        "                              location=\"*\", starttime=STARTTIME,"\
        "\n                              endtime=ENDTIME, level='channel', f"\
        "ormat = \"text\")\n\n",
        'inv\n',
        'print(inv)\n',
        'for network in test:\n  print(network)\n  for station in network:\n'\
        '    print(station)\n    for channel in station:\n        print(chan'\
        'nel)\n\n',
        'import requests\n',
        "url = ' http://service.iris.edu/fdsnws/station/1/query?net=AV&sta=W"\
        "AZA&loc=00&cha=BHZ&starttime=2021-06-03&endtime=2021-06-03&level=ch"\
        "annel&format=text'\n",
        'resp.text()\n',
        "url = ' http://service.iris.edu/fdsnws/station/1/query?net=AV&sta=W"\
        "AZA&loc=00&cha=BHZ&starttime=2021-06-02&endtime=2021-06-03&level=ch"\
        "annel&format=text'\n",
        "url = 'http://service.iris.edu/fdsnws/station/1/query?net=AV&sta=WA"\
        "ZA&loc=00&cha=BHZ&starttime=2021-06-03&endtime=2021-06-03&level=cha"\
        "nnel&format=text'\n",
        "url = 'http://service.iris.edu/fdsnws/station/1/query?net=AV&sta=WA"\
        "ZA&loc=*&cha=BHZ&starttime=2021-06-03&endtime=2021-06-03&level=chan"\
        "nel&format=text'\n",
        'resp = requests.get(url)\n',
        'resp.status_code\n',
        'resp.text\n',
        'url\n',
        'reader\n',
        'numpy.log10(10)\n',
        'numpy.log10(100)\n',
        'numpy.log10(1000)\n',
        'test = [(1.0000,1.0000,1.0000,),\n(0.9412,0.9412,0.9412,1),\n(0.882'\
        '4,0.8824,0.8824,1),\n(0.8235,0.8235,0.8235,1),\n(0.7647,0.7647,0.76'\
        '47,1),\n(0.7059,0.7059,0.7059,1),\n(0.6471,0.6471,0.6471,1),\n(0.58'\
        '82,0.5882,0.5882,1),\n(0.5294,0.5294,0.5294,1),\n(0.4706,0.4706,0.4'\
        '706,1),\n(0.4118,0.4118,0.4118,1),\n(0.3529,0.3529,0.3529,1),\n(0.2'\
        '941,0.2941,0.2941,1),\n(0.2353,0.2353,0.2353,1),\n(0.1765,0.1765,0.'\
        '1765,1),\n(0.1176,0.1176,0.1176,1),\n(0.0588,0.0588,0.0588,1),\n(0,'\
        '0,0,1),\n(0,0,0.5625,1),\n(0,0,0.6250,1),\n(0,0,0.6875,1),\n(0,0,0.'\
        '7500,1),\n(0,0,0.8125,1),\n(0,0,0.8750,1),\n(0,0,0.9375,1),\n(0,0,1'\
        '.0000,1),\n(0,0.0625,1.0000,1),\n(0,0.1250,1.0000,1),\n(0,0.1875,1.'\
        '0000,1),\n(0,0.2500,1.0000,1),\n(0,0.3125,1.0000,1),\n(0,0.3750,1.0'\
        '000,1),\n(0,0.4375,1.0000,1),\n(0,0.5000,1.0000,1),\n(0,0.5625,1.00'\
        '00,1),\n(0,0.6250,1.0000,1),\n(0,0.6875,1.0000,1),\n(0,0.7500,1.000'\
        '0,1),\n(0,0.8125,1.0000,1),\n(0,0.8750,1.0000,1),\n(0,0.9375,1.0000'\
        ',1),\n(0,1.0000,1.0000,1),\n(0.0625,1.0000,1.0000,1),\n(0.1250,1.00'\
        '00,0.9375,1),\n(0.1875,1.0000,0.8750,1),\n(0.2500,1.0000,0.8125,1),'\
        '\n(0.3125,1.0000,0.7500,1),\n(0.3750,1.0000,0.6875,1),\n(0.4375,1.0'\
        '000,0.6250,1),\n(0.5000,1.0000,0.5625,1),\n(0.5625,1.0000,0.5000,1)'\
        ',\n(0.6250,1.0000,0.4375,1),\n(0.6875,1.0000,0.3750,1),\n(0.7500,1.'\
        '0000,0.3125,1),\n(0.8125,1.0000,0.2500,1),\n(0.8750,1.0000,0.1875,1'\
        '),\n(0.9375,1.0000,0.1250,1),\n(1.0000,1.0000,0,1),\n(1.0000,0.9377'\
        ',0,1),\n(1.0000,0.8755,0,1),\n(1.0000,0.8132,0,1),\n(1.0000,0.7510,'\
        '0,1),\n(1.0000,0.6887,0,1),\n(1.0000,0.6265,0,1),\n(1.0000,0.5642,0'\
        ',1),\n(1.0000,0.5020,0,1),\n(1.0000,0.3765,0,1),\n(1.0000,0.2510,0,'\
        '1),\n(1.0000,0.1255,0,1),\n(1.0000,0,0,1),\n(0.9375,0,0.5000,1),\n'\
        '(0.9375,0.5000,0.9375,1),\n(1.0000,0.8000,1.0000,1)]\n\n',
        'test\n',
        'import configparser\n',
        'UTCDateTime()\n',
        'import numpy\n',
        'numpy.arange(0, 10, 2)\n',
        'import os\n',
        'from obspy import UTCDateTime\n',
        'now = UTCDateTime()\n',
        'now\n',
        'now.date()\n',
        'now.date\n',
        'now.day\n',
        'now.year\n',
        'now.month\n',
        'now.isoformat()\n',
        'now.format_seed\n',
        'now.format_seed(compact=False)\n',
        "now.strftime('%Y%m%dT%H%M%S')\n",
        "os.path.split('some/random/path/to/file.png')\n",
        "os.path.join(os.path.split('some/random/path/to/file.png'))\n",
        "os.path.join( *os.path.split('some/random/path/to/file.png'))\n"]},
                       'launch-id': None,
                       'sel-line': 732L,
                       'sel-line-start': 28069L,
                       'selection_end': 28069L,
                       'selection_start': 28069L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        u'west'),
                                       ('eval',
        u'east'),
                                       ('eval',
        u'north'),
                                       ('eval',
        u'south')],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [(0,),
        (0,)],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.5123419626730885,
        ({'bookmarks': ([[loc('generate_spectrograms.py'),
                          {'attrib-starts': [('main|0|',
        14)],
                           'code-line': "    sos = butter(2, WN, 'highpass',"\
        " analog = True, fs = 50, output = 'sos')\n",
                           'first-line': 41L,
                           'folded-linenos': [],
                           'sel-line': 58L,
                           'sel-line-start': 1601L,
                           'selection_end': 1653L,
                           'selection_start': 1653L,
                           'zoom': 0L},
                          1623269061.717126],
                         [loc('lib/python3.8/site-packages/scipy/signal/filter_design.py'),
                          {'attrib-starts': [('iirfilter|0|',
        2236)],
                           'code-line': "    >>> ax.set_title('Chebyshev Typ"\
        "e II bandpass frequency response')\n",
                           'first-line': 2326L,
                           'folded-linenos': [],
                           'sel-line': 2340L,
                           'sel-line-start': 77131L,
                           'selection_end': 77186L,
                           'selection_start': 77186L,
                           'zoom': 0L},
                          1623269066.134344],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('main|0|',
        14)],
                           'code-line': '    WN = cutoff_freq / nyquist_freq'\
        '\n',
                           'first-line': 41L,
                           'folded-linenos': [],
                           'sel-line': 57L,
                           'sel-line-start': 1565L,
                           'selection_end': 1600L,
                           'selection_start': 1600L,
                           'zoom': 0L},
                          1623269389.949104],
                         [loc('lib/python3.8/site-packages/obspy/clients/earthworm/waveserver.py'),
                          {'attrib-starts': [('TraceBuf2|0|',
        55),
        ('TraceBuf2|0|.parse_header|0|',
         78)],
                           'code-line': '        self.start = UTCDateTime(ts'\
        ')\n',
                           'first-line': 92L,
                           'folded-linenos': [],
                           'sel-line': 97L,
                           'sel-line-start': 2805L,
                           'selection_end': 2841L,
                           'selection_start': 2841L,
                           'zoom': 0L},
                          1623269398.873605],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('main|0|',
        15)],
                           'code-line': '    data2 = data2 - data2.mean()\n',
                           'first-line': 48L,
                           'folded-linenos': [],
                           'sel-line': 68L,
                           'sel-line-start': 2197L,
                           'selection_end': 2206L,
                           'selection_start': 2201L,
                           'zoom': 0L},
                          1623341495.799774],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('main|0|',
        18)],
                           'code-line': "    meta_url = f'https://service.ir"\
        "is.edu/fdsnws/station/1/query?net={NET}&sta={STA}&cha={CHAN}&startt"\
        "ime={STARTTIME}&endtime={ENDTIME}&level=channel&format=text'\n",
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 36L,
                           'sel-line-start': 968L,
                           'selection_end': 1033L,
                           'selection_start': 985L,
                           'zoom': 0L},
                          1623343401.238501],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_spectrogram|0|',
        42)],
                           'code-line': '    plot_times = spec_info[1]\n',
                           'first-line': 62L,
                           'folded-linenos': [],
                           'sel-line': 95L,
                           'sel-line-start': 3017L,
                           'selection_end': 3031L,
                           'selection_start': 3021L,
                           'zoom': 0L},
                          1623345245.620432],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_spectrogram|0|',
        42)],
                           'code-line': "    ax1.plot(times, data, 'k-', lin"\
        "ewidth = .5)\n",
                           'first-line': 62L,
                           'folded-linenos': [],
                           'sel-line': 105L,
                           'sel-line-start': 3414L,
                           'selection_end': 3432L,
                           'selection_start': 3427L,
                           'zoom': 0L},
                          1623345263.992516],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_filter|0|',
        21)],
                           'code-line': '                  fs = sample_rate,'\
        '\n',
                           'first-line': 15L,
                           'folded-linenos': [],
                           'sel-line': 26L,
                           'sel-line-start': 701L,
                           'selection_end': 736L,
                           'selection_start': 736L,
                           'zoom': 0L},
                          1623348353.880816],
                         [loc('lib/python3.8/site-packages/obspy/core/utcdatetime.py'),
                          {'attrib-starts': [('UTCDateTime|0|',
        71),
        ('UTCDateTime|0|.__sub__|0|',
         1012)],
                           'code-line': '        return UTCDateTime(ns=self.'\
        '_ns - int(round((value * 1e9))))\n',
                           'first-line': 1005L,
                           'folded-linenos': [],
                           'sel-line': 1040L,
                           'sel-line-start': 35153L,
                           'selection_end': 35153L,
                           'selection_start': 35153L,
                           'zoom': 0L},
                          1623348370.605474],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_spectrogram|0|',
        62)],
                           'code-line': '    data = z_tr.data\n',
                           'first-line': 93L,
                           'folded-linenos': [],
                           'sel-line': 123L,
                           'sel-line-start': 3937L,
                           'selection_end': 3945L,
                           'selection_start': 3941L,
                           'zoom': 0L},
                          1623351454.033686],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_spectrogram|0|',
        80)],
                           'code-line': '    overflow = 10\n',
                           'first-line': 83L,
                           'folded-linenos': [],
                           'sel-line': 95L,
                           'sel-line-start': 2716L,
                           'selection_end': 2728L,
                           'selection_start': 2720L,
                           'zoom': 0L},
                          1623355024.151596],
                         [loc('lib/python3.8/site-packages/obspy/core/utcdatetime.py'),
                          {'attrib-starts': [('UTCDateTime|0|',
        71),
        ('UTCDateTime|0|.__sub__|0|',
         1012)],
                           'code-line': '        return UTCDateTime(ns=self.'\
        '_ns - int(round((value * 1e9))))\n',
                           'first-line': 1005L,
                           'folded-linenos': [],
                           'sel-line': 1040L,
                           'sel-line-start': 35153L,
                           'selection_end': 35153L,
                           'selection_start': 35153L,
                           'zoom': 0L},
                          1623359169.551219],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_spectrogram|0|',
        55)],
                           'code-line': "        channel_wild = CHAN[:-1] + "\
        "'*'\n",
                           'first-line': 94L,
                           'folded-linenos': [],
                           'sel-line': 130L,
                           'sel-line-start': 4099L,
                           'selection_end': 4119L,
                           'selection_start': 4107L,
                           'zoom': 0L},
                          1623426667.995828],
                         [loc('gen_station_config.py'),
                          {'attrib-starts': [],
                           'code-line': '    OTHER = info.get("OTHER", [])\n',
                           'first-line': 34L,
                           'folded-linenos': [],
                           'sel-line': 57L,
                           'sel-line-start': 1094L,
                           'selection_end': 1127L,
                           'selection_start': 1127L,
                           'zoom': 0L},
                          1623429748.037073],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_spectrogram|0|',
        65)],
                           'code-line': "        stream.filter('bandpass', f"\
        "reqmin = low, freqmax = high,\n",
                           'first-line': 154L,
                           'folded-linenos': [],
                           'sel-line': 181L,
                           'sel-line-start': 6046L,
                           'selection_end': 6110L,
                           'selection_start': 6110L,
                           'zoom': 0L},
                          1623429776.888099],
                         [loc('station_config.py'),
                          {'attrib-starts': [],
                           'code-line': "locations={'Iliamna': [{'STA': 'ILL"\
        "G'},\n",
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1623429791.342235],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('main|0|',
        28)],
                           'code-line': '            os.makedirs(path, exist'\
        '_ok = True)\n',
                           'first-line': 14L,
                           'folded-linenos': [],
                           'sel-line': 55L,
                           'sel-line-start': 1553L,
                           'selection_end': 1587L,
                           'selection_start': 1587L,
                           'zoom': 0L},
                          1623430880.170745],
                         [loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/genericpath.py'),
                          {'attrib-starts': [('_splitext|0|',
        120)],
                           'code-line': '    Extension is everything from th'\
        'e last dot to the end, ignoring\n',
                           'first-line': 116L,
                           'folded-linenos': [],
                           'sel-line': 123L,
                           'sel-line-start': 3824L,
                           'selection_end': 3862L,
                           'selection_start': 3862L,
                           'zoom': 0L},
                          1623430885.804669],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('main|0|',
        28)],
                           'code-line': '    \n',
                           'first-line': 16L,
                           'folded-linenos': [],
                           'sel-line': 48L,
                           'sel-line-start': 1236L,
                           'selection_end': 1240L,
                           'selection_start': 1240L,
                           'zoom': 0L},
                          1623431246.771354],
                         (loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/posixpath.py'),
                          {'attrib-starts': [('join|0|',
        70)],
                           'code-line': '    a = os.fspath(a)\n',
                           'first-line': 28L,
                           'folded-linenos': [],
                           'sel-line': 75L,
                           'sel-line-start': 2478L,
                           'selection_end': 2478L,
                           'selection_start': 2478L,
                           'zoom': 0L},
                          1623431261.693133)],
                        19),
          'current-loc': loc('generate_spectrograms.py'),
          'editor-state-list': [(loc('config.ini'),
                                 {}),
                                (loc('CreateConfig.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'import configparser\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/matplotlib/figure.py'),
                                 {'attrib-starts': [('SubplotParams|0|',
        119),
        ('SubplotParams|0|.update|0|',
         154)],
                                  'code-line': "                raise ValueE"\
        "rror('bottom cannot be >= top')\n",
                                  'first-line': 130L,
                                  'folded-linenos': [],
                                  'sel-line': 165L,
                                  'sel-line-start': 5264L,
                                  'selection_end': 5264L,
                                  'selection_start': 5264L,
                                  'zoom': 0L}),
                                (loc('GenerateColormap.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'import numpy\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('generate_spectrograms.py'),
                                 {'attrib-starts': [('main|0|',
        28)],
                                  'code-line': '    script_loc = os.path.dir'\
        'name(__file__)\n',
                                  'first-line': 29L,
                                  'folded-linenos': [],
                                  'sel-line': 48L,
                                  'sel-line-start': 1232L,
                                  'selection_end': 1274L,
                                  'selection_start': 1274L,
                                  'zoom': 0L}),
                                (loc('gen_station_config.py'),
                                 {'attrib-starts': [],
                                  'code-line': '    OTHER = info.get("OTHER"'\
        ', [])\n',
                                  'first-line': 34L,
                                  'folded-linenos': [],
                                  'sel-line': 57L,
                                  'sel-line-start': 1094L,
                                  'selection_end': 1127L,
                                  'selection_start': 1127L,
                                  'zoom': 0L}),
                                (loc('../web-infrasound/new_array_processing.py'),
                                 {'attrib-starts': [],
                                  'code-line': "                        defa"\
        "ult=[(UTCDateTime.utcnow()).strftime('%Y-%m-%dT%H:%M:00Z'), ])\n",
                                  'first-line': 33L,
                                  'folded-linenos': [],
                                  'sel-line': 42L,
                                  'sel-line-start': 1171L,
                                  'selection_end': 1232L,
                                  'selection_start': 1232L,
                                  'zoom': 0L}),
                                (loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/posixpath.py'),
                                 {'attrib-starts': [('join|0|',
        70)],
                                  'code-line': '    a = os.fspath(a)\n',
                                  'first-line': 28L,
                                  'folded-linenos': [],
                                  'sel-line': 75L,
                                  'sel-line-start': 2478L,
                                  'selection_end': 2478L,
                                  'selection_start': 2478L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/matplotlib/pyplot.py'),
                                 {'attrib-starts': [('clim|0|',
        2359)],
                                  'code-line': "        raise RuntimeError('"\
        "You must first define an image, e.g., with imshow')\n",
                                  'first-line': 2330L,
                                  'folded-linenos': [],
                                  'sel-line': 2375L,
                                  'sel-line-start': 80419L,
                                  'selection_end': 80419L,
                                  'selection_start': 80419L,
                                  'zoom': 0L}),
                                (loc('requirements.txt'),
                                 {'attrib-starts': [],
                                  'code-line': 'matplotlib',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 2L,
                                  'sel-line-start': 12L,
                                  'selection_end': 22L,
                                  'selection_start': 22L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/scipy/signal/spectral.py'),
                                 {'attrib-starts': [('_spectral_helper|0|',
        1575)],
                                  'code-line': "        raise ValueError('nf"\
        "ft must be greater than or equal to nperseg.')\n",
                                  'first-line': 1738L,
                                  'folded-linenos': [],
                                  'sel-line': 1744L,
                                  'sel-line-start': 65133L,
                                  'selection_end': 65133L,
                                  'selection_start': 65133L,
                                  'zoom': 0L}),
                                (loc('spectrograms/__init__.py'),
                                 {}),
                                (loc('station_config.py'),
                                 {'attrib-starts': [],
                                  'code-line': "locations={'Iliamna': [{'STA"\
        "': 'ILLG'},\n",
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/matplotlib/transforms.py'),
                                 {'attrib-starts': [('nonsingular|0|',
        2798)],
                                  'code-line': '    if (not np.isfinite(vmin'\
        ')) or (not np.isfinite(vmax)):\n',
                                  'first-line': 2779L,
                                  'folded-linenos': [],
                                  'sel-line': 2826L,
                                  'sel-line-start': 94846L,
                                  'selection_end': 94846L,
                                  'selection_start': 94846L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/scipy/signal/windows/windows.py'),
                                 {'attrib-starts': [('get_window|0|',
        2047)],
                                  'code-line': '        params = (Nx,) + arg'\
        's + (sym,)\n',
                                  'first-line': 2086L,
                                  'folded-linenos': [],
                                  'sel-line': 2147L,
                                  'sel-line-start': 75765L,
                                  'selection_end': 75785L,
                                  'selection_start': 75783L,
                                  'zoom': 0L}),
                                (loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/concurrent/futures/_base.py'),
                                 {'attrib-starts': [('Future|0|',
        312),
        ('Future|0|.cancel|0|',
         351)],
                                  'code-line': '            if self._state i'\
        'n [RUNNING, FINISHED]:\n',
                                  'first-line': 353L,
                                  'folded-linenos': [],
                                  'sel-line': 358L,
                                  'sel-line-start': 11639L,
                                  'selection_end': 11672L,
                                  'selection_start': 11672L,
                                  'zoom': 0L})],
          'has-focus': True,
          'locked': False},
         [loc('config.ini'),
          loc('CreateConfig.py'),
          loc('lib/python3.8/site-packages/matplotlib/figure.py'),
          loc('GenerateColormap.py'),
          loc('generate_spectrograms.py'),
          loc('gen_station_config.py'),
          loc('../web-infrasound/new_array_processing.py'),
          loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/posixpath.py'),
          loc('lib/python3.8/site-packages/matplotlib/pyplot.py'),
          loc('requirements.txt'),
          loc('lib/python3.8/site-packages/scipy/signal/spectral.py'),
          loc('spectrograms/__init__.py'),
          loc('station_config.py'),
          loc('lib/python3.8/site-packages/matplotlib/transforms.py'),
          loc('lib/python3.8/site-packages/scipy/signal/windows/windows.py'),
          loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/concurrent/futures/_base.py')]),
        ({'bookmarks': ([[loc('lib/python3.8/site-packages/obspy/clients/fdsn/client.py'),
                          {'attrib-starts': [('Client|0|',
        97),
        ('Client|0|._discover_services|0|',
         1414)],
                           'code-line': '            raise FDSNException(msg'\
        ')\n',
                           'first-line': 1501L,
                           'folded-linenos': [],
                           'sel-line': 1548L,
                           'sel-line-start': 68947L,
                           'selection_end': 68947L,
                           'selection_start': 68947L,
                           'zoom': 0L},
                          1623268397.582496],
                         [loc('../web-infrasound/new_array_processing.py'),
                          {'attrib-starts': [],
                           'code-line': '        all_stations[NETDISP] = []'\
        '\n',
                           'first-line': 74L,
                           'folded-linenos': [],
                           'sel-line': 78L,
                           'sel-line-start': 2194L,
                           'selection_end': 2228L,
                           'selection_start': 2228L,
                           'zoom': 0L},
                          1623271893.074852],
                         [loc('GenerateColormap.py'),
                          {'attrib-starts': [('generate_colormap|0|',
        5)],
                           'code-line': '                 (0.7647, 0.7647, 0'\
        '.7647, 1),\n',
                           'first-line': 1L,
                           'folded-linenos': [],
                           'sel-line': 10L,
                           'sel-line-start': 373L,
                           'selection_end': 418L,
                           'selection_start': 418L,
                           'zoom': 0L},
                          1623342696.44768],
                         [loc('CreateConfig.py'),
                          {'attrib-starts': [],
                           'code-line': "config['WINSTON'] = {'url': 'pubavo"\
        "1.wr.usgs.gov',\n",
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 5L,
                           'sel-line-start': 102L,
                           'selection_end': 102L,
                           'selection_start': 102L,
                           'zoom': 0L},
                          1623343401.244264],
                         [loc('CreateConfig.py'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 18L,
                           'sel-line-start': 418L,
                           'selection_end': 418L,
                           'selection_start': 418L,
                           'zoom': 0L},
                          1623344928.230226],
                         [loc('config.ini'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 15L,
                           'sel-line-start': 190L,
                           'selection_end': 190L,
                           'selection_start': 190L,
                           'zoom': 0L},
                          1623346896.402706],
                         [loc('../web-infrasound/new_array_processing.py'),
                          {'attrib-starts': [],
                           'code-line': 'from obspy.geodetics.base import gp'\
        's2dist_azimuth\n',
                           'first-line': 15L,
                           'folded-linenos': [],
                           'sel-line': 15L,
                           'sel-line-start': 346L,
                           'selection_end': 395L,
                           'selection_start': 395L,
                           'zoom': 0L},
                          1623346934.613218],
                         [loc('config.ini'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 15L,
                           'sel-line-start': 190L,
                           'selection_end': 190L,
                           'selection_start': 190L,
                           'zoom': 0L},
                          1623346951.838835],
                         [loc('CreateConfig.py'),
                          {'attrib-starts': [],
                           'code-line': 'config = configparser.ConfigParser('\
        ')\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 2L,
                           'sel-line-start': 21L,
                           'selection_end': 55L,
                           'selection_start': 43L,
                           'zoom': 0L},
                          1623346965.213369],
                         [loc('config.ini'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 15L,
                           'sel-line-start': 190L,
                           'selection_end': 190L,
                           'selection_start': 190L,
                           'zoom': 0L},
                          1623348776.743074],
                         [loc('CreateConfig.py'),
                          {'attrib-starts': [],
                           'code-line': '\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 24L,
                           'sel-line-start': 505L,
                           'selection_end': 505L,
                           'selection_start': 505L,
                           'zoom': 0L},
                          1623349685.712704],
                         [loc('../web-infrasound/new_array_processing.py'),
                          {'attrib-starts': [],
                           'code-line': 'from obspy.geodetics.base import gp'\
        's2dist_azimuth\n',
                           'first-line': 15L,
                           'folded-linenos': [],
                           'sel-line': 15L,
                           'sel-line-start': 346L,
                           'selection_end': 395L,
                           'selection_start': 395L,
                           'zoom': 0L},
                          1623349688.963488],
                         [loc('../web-infrasound/new_array_processing.py'),
                          {'attrib-starts': [],
                           'code-line': '\n',
                           'first-line': 1L,
                           'folded-linenos': [],
                           'sel-line': 20L,
                           'sel-line-start': 463L,
                           'selection_end': 463L,
                           'selection_start': 463L,
                           'zoom': 0L},
                          1623359169.087972],
                         [loc('station_config.py'),
                          {'attrib-starts': [],
                           'code-line': 'locations = {\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 14L,
                           'sel-line-start': 341L,
                           'selection_end': 353L,
                           'selection_start': 353L,
                           'zoom': 0L},
                          1623359469.740804],
                         [loc('station_config.py'),
                          {'attrib-starts': [],
                           'code-line': '        ],\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 20L,
                           'sel-line-start': 386L,
                           'selection_end': 396L,
                           'selection_start': 396L,
                           'zoom': 0L},
                          1623427343.920822],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_spectrogram|0|',
        65)],
                           'code-line': '\n',
                           'first-line': 58L,
                           'folded-linenos': [],
                           'sel-line': 75L,
                           'sel-line-start': 2214L,
                           'selection_end': 2214L,
                           'selection_start': 2214L,
                           'zoom': 0L},
                          1623429060.296672],
                         [loc('gen_station_config.py'),
                          {'attrib-starts': [],
                           'code-line': '    pprinter.pprint(dict(locations)'\
        ')\n',
                           'first-line': 57L,
                           'folded-linenos': [],
                           'sel-line': 99L,
                           'sel-line-start': 2445L,
                           'selection_end': 2480L,
                           'selection_start': 2480L,
                           'zoom': 0L},
                          1623429748.032643],
                         [loc('gen_station_config.py'),
                          {'attrib-starts': [],
                           'code-line': '    for oth in OTHER:\n',
                           'first-line': 57L,
                           'folded-linenos': [],
                           'sel-line': 64L,
                           'sel-line-start': 1293L,
                           'selection_end': 1314L,
                           'selection_start': 1314L,
                           'zoom': 0L},
                          1623429869.606828],
                         [loc('generate_spectrograms.py'),
                          {'attrib-starts': [('generate_spectrogram|0|',
        78)],
                           'code-line': '\n',
                           'first-line': 116L,
                           'folded-linenos': [],
                           'sel-line': 127L,
                           'sel-line-start': 3985L,
                           'selection_end': 3985L,
                           'selection_start': 3985L,
                           'zoom': 0L},
                          1623434281.764518],
                         [loc('station_config.py'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 25L,
                           'sel-line-start': 774L,
                           'selection_end': 774L,
                           'selection_start': 774L,
                           'zoom': 0L},
                          1623435900.200801]],
                        20),
          'current-loc': loc('spectrograms/__init__.py'),
          'editor-state-list': [(loc('config.ini'),
                                 {'attrib-starts': [],
                                  'code-line': '[SPECTROGRAM]\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 15L,
                                  'sel-line-start': 190L,
                                  'selection_end': 190L,
                                  'selection_start': 190L,
                                  'zoom': 0L}),
                                (loc('CreateConfig.py'),
                                 {'attrib-starts': [],
                                  'code-line': '\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 24L,
                                  'sel-line-start': 505L,
                                  'selection_end': 505L,
                                  'selection_start': 505L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/matplotlib/figure.py'),
                                 {}),
                                (loc('GenerateColormap.py'),
                                 {'attrib-starts': [('generate_colormap|0|',
        5)],
                                  'code-line': '                 (0.7647, 0.'\
        '7647, 0.7647, 1),\n',
                                  'first-line': 1L,
                                  'folded-linenos': [],
                                  'sel-line': 10L,
                                  'sel-line-start': 373L,
                                  'selection_end': 418L,
                                  'selection_start': 418L,
                                  'zoom': 0L}),
                                (loc('generate_spectrograms.py'),
                                 {'attrib-starts': [('generate_spectrogram|0'\
        '|',
        78)],
                                  'code-line': '\n',
                                  'first-line': 116L,
                                  'folded-linenos': [],
                                  'sel-line': 127L,
                                  'sel-line-start': 4046L,
                                  'selection_end': 4046L,
                                  'selection_start': 4046L,
                                  'zoom': 0L}),
                                (loc('gen_station_config.py'),
                                 {'attrib-starts': [],
                                  'code-line': '    for oth in OTHER:\n',
                                  'first-line': 57L,
                                  'folded-linenos': [],
                                  'sel-line': 64L,
                                  'sel-line-start': 1293L,
                                  'selection_end': 1314L,
                                  'selection_start': 1314L,
                                  'zoom': 0L}),
                                (loc('../web-infrasound/new_array_processing.py'),
                                 {'attrib-starts': [],
                                  'code-line': '\n',
                                  'first-line': 1L,
                                  'folded-linenos': [],
                                  'sel-line': 20L,
                                  'sel-line-start': 463L,
                                  'selection_end': 463L,
                                  'selection_start': 463L,
                                  'zoom': 0L}),
                                (loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/posixpath.py'),
                                 {}),
                                (loc('lib/python3.8/site-packages/matplotlib/pyplot.py'),
                                 {}),
                                (loc('requirements.txt'),
                                 {'attrib-starts': [],
                                  'code-line': 'matplotlib',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 2L,
                                  'sel-line-start': 12L,
                                  'selection_end': 22L,
                                  'selection_start': 22L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/scipy/signal/spectral.py'),
                                 {}),
                                (loc('spectrograms/__init__.py'),
                                 {'attrib-starts': [],
                                  'code-line': '',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 3L,
                                  'sel-line-start': 42L,
                                  'selection_end': 42L,
                                  'selection_start': 42L,
                                  'zoom': 0L}),
                                (loc('station_config.py'),
                                 {'attrib-starts': [],
                                  'code-line': '',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 25L,
                                  'sel-line-start': 774L,
                                  'selection_end': 774L,
                                  'selection_start': 774L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/matplotlib/transforms.py'),
                                 {}),
                                (loc('lib/python3.8/site-packages/scipy/signal/windows/windows.py'),
                                 {}),
                                (loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/concurrent/futures/_base.py'),
                                 {})],
          'has-focus': False,
          'locked': False},
         [loc('config.ini'),
          loc('CreateConfig.py'),
          loc('lib/python3.8/site-packages/matplotlib/figure.py'),
          loc('GenerateColormap.py'),
          loc('generate_spectrograms.py'),
          loc('gen_station_config.py'),
          loc('../web-infrasound/new_array_processing.py'),
          loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/posixpath.py'),
          loc('lib/python3.8/site-packages/matplotlib/pyplot.py'),
          loc('requirements.txt'),
          loc('lib/python3.8/site-packages/scipy/signal/spectral.py'),
          loc('spectrograms/__init__.py'),
          loc('station_config.py'),
          loc('lib/python3.8/site-packages/matplotlib/transforms.py'),
          loc('lib/python3.8/site-packages/scipy/signal/windows/windows.py'),
          loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/concurrent/futures/_base.py')])),
                               'open_files': [u'lib/python3.8/site-packages/matplotlib/pyplot.py',
        u'lib/python3.8/site-packages/scipy/signal/windows/windows.py',
        u'requirements.txt',
        u'lib/python3.8/site-packages/scipy/signal/spectral.py',
        u'GenerateColormap.py',
        u'config.ini',
        u'CreateConfig.py',
        u'../web-infrasound/new_array_processing.py',
        u'gen_station_config.py',
        u'station_config.py',
        u'spectrograms/__init__.py',
        u'generate_spectrograms.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.43253968253968256},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           1),
                          1623435644.386804),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1623428255.559296),
                 'user_data': {}},
        'window-alloc': (91,
                         133,
                         2293,
                         1263)}]}
guimgr.recent-documents = [loc('spectrograms/__init__.py'),
                           loc('station_config.py'),
                           loc('generate_spectrograms.py'),
                           loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/posixpath.py'),
                           loc('lib/python3.8/site-packages/matplotlib/transforms.py'),
                           loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/concurrent/futures/_base.py'),
                           loc('lib/python3.8/site-packages/matplotlib/figure.py'),
                           loc('../web-infrasound/new_array_processing.py'),
                           loc('CreateConfig.py'),
                           loc('config.ini'),
                           loc('GenerateColormap.py'),
                           loc('lib/python3.8/site-packages/scipy/signal/spectral.py')]
guimgr.visual-state = {loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/genericpath.py'): {'a'\
        'ttrib-starts': [('_splitext|0|',
                          120)],
        'code-line': '    Extension is everything from the last dot to the e'\
                     'nd, ignoring\n',
        'first-line': 116L,
        'folded-linenos': [],
        'sel-line': 123L,
        'sel-line-start': 3824L,
        'selection_end': 3862L,
        'selection_start': 3862L,
        'zoom': 0L},
                       loc('generate_spectrograms.py'): {'attrib-starts': [('m'\
        'ain|0|',
        12)],
        'code-line': '    plot_times = spec_info[1]\n',
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 1602L,
        'selection_end': 1630L,
        'selection_start': 1630L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          89),
                         ('Artist|0|.set_in_layout|0|',
                          1024)],
        'code-line': '        """\n',
        'first-line': 1014L,
        'folded-linenos': [],
        'sel-line': 1034L,
        'sel-line-start': 34222L,
        'selection_end': 34233L,
        'selection_start': 34233L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/matplotlib/colors.py'): {'a'\
        'ttrib-starts': [('_to_rgba_no_colorcycle|0|',
                          213)],
        'code-line': '            color = [int(n, 16) / 255\n',
        'first-line': 238L,
        'folded-linenos': [],
        'sel-line': 252L,
        'sel-line-start': 8829L,
        'selection_end': 8866L,
        'selection_start': 8866L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/matplotlib/dates.py'): {'a'\
        'ttrib-starts': [('_dt64_to_ordinalf|0|',
                          284)],
        'code-line': '        if d_int == NaT_int:\n',
        'first-line': 294L,
        'folded-linenos': [],
        'sel-line': 307L,
        'sel-line-start': 10223L,
        'selection_end': 10251L,
        'selection_start': 10251L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/numpy/linalg/linalg.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '_linalg_error_extobj = _determine_error_states()\n',
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 83L,
        'sel-line-start': 2650L,
        'selection_end': 2698L,
        'selection_start': 2698L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/obspy/clients/earthworm/waveserver.py'): {'a'\
        'ttrib-starts': [('TraceBuf2|0|',
                          55),
                         ('TraceBuf2|0|.parse_header|0|',
                          78)],
        'code-line': '        self.start = UTCDateTime(ts)\n',
        'first-line': 92L,
        'folded-linenos': [],
        'sel-line': 97L,
        'sel-line-start': 2805L,
        'selection_end': 2841L,
        'selection_start': 2841L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/scipy/signal/filter_design.py'): {'a'\
        'ttrib-starts': [('iirfilter|0|',
                          2236)],
        'code-line': "    >>> ax.set_title('Chebyshev Type II bandpass frequ"\
                     "ency response')\n",
        'first-line': 2326L,
        'folded-linenos': [],
        'sel-line': 2340L,
        'sel-line-start': 77131L,
        'selection_end': 77186L,
        'selection_start': 77186L,
        'zoom': 0L},
                       loc('station_config.py'): {'attrib-starts': [],
        'code-line': "locations={'Iliamna': [{'STA': 'ILLG'},\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
proj.ptype = 'virtualenv'
proj.pyexec = {None: ('activate',
                      u'/Users/israel/Development/seismic_spectrogram/bin/activate')}
testing.stored-results = (1,
                          [],
                          {})
